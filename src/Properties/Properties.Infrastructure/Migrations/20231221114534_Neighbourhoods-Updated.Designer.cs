// <auto-generated />
using System;
using BuildingMarket.Properties.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BuildingMarket.Properties.Infrastructure.Migrations
{
    [DbContext(typeof(PropertiesDbContext))]
    [Migration("20231221114534_Neighbourhoods-Updated")]
    partial class NeighbourhoodsUpdated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BuildingMarket.Properties.Domain.Entities.AdditionalUserData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("first_name");

                    b.Property<string>("ImageURL")
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("character varying")
                        .HasColumnName("phone_number");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("AdditionalData", "security", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("BuildingMarket.Properties.Domain.Entities.BuildingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("building_type");

                    b.HasKey("Id");

                    b.ToTable("BuildingType", "properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Тухла"
                        },
                        new
                        {
                            Id = 2,
                            Description = "ЕПК"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Панел"
                        });
                });

            modelBuilder.Entity("BuildingMarket.Properties.Domain.Entities.Exposure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("exposure_type");

                    b.HasKey("Id");

                    b.ToTable("Exposures", "properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Юг"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Изток"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Запад"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Север"
                        });
                });

            modelBuilder.Entity("BuildingMarket.Properties.Domain.Entities.Finish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("finish_type");

                    b.HasKey("Id");

                    b.ToTable("Finish", "properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Акт 16"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Акт 15"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Акт 14"
                        },
                        new
                        {
                            Id = 4,
                            Description = "В Строеж"
                        },
                        new
                        {
                            Id = 5,
                            Description = "На Зелено"
                        });
                });

            modelBuilder.Entity("BuildingMarket.Properties.Domain.Entities.Furnishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("furnishment_type");

                    b.HasKey("Id");

                    b.ToTable("Furnishment", "properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Необзаведен"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Обзаведен"
                        },
                        new
                        {
                            Id = 3,
                            Description = "До ключ"
                        });
                });

            modelBuilder.Entity("BuildingMarket.Properties.Domain.Entities.Garage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("garage_type");

                    b.HasKey("Id");

                    b.ToTable("Garage", "properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Без"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Включен в цената"
                        },
                        new
                        {
                            Id = 3,
                            Description = "С възможност"
                        });
                });

            modelBuilder.Entity("BuildingMarket.Properties.Domain.Entities.Heating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("heating_type");

                    b.HasKey("Id");

                    b.ToTable("Heating", "properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Без"
                        },
                        new
                        {
                            Id = 2,
                            Description = "ТЕЦ"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Електричество"
                        });
                });

            modelBuilder.Entity("BuildingMarket.Properties.Domain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageURL")
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<int>("PropertyId")
                        .HasColumnType("integer")
                        .HasColumnName("property_id");

                    b.HasKey("Id");

                    b.ToTable("Images", "properties", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("BuildingMarket.Properties.Domain.Entities.Neighborhood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("region");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Neighbourhoods", "properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Център",
                            Region = "Център"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Зона Б-18",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Света Троица",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Захарна фабрика",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Модерно предградие",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Банишора",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Фондови жилища",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Триъгълника",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Надежда 1",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Надежда 3",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Връбница 1",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Обеля 1",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Обеля",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Обеля 2",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Връбница 2",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Илиянци",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Свобода",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Надежда 4",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Надежда 2",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Толстой",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Военна рампа",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Орландовци",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Хаджи Димитър",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Малашевци",
                            Region = "Север"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Левски В",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Левски Г",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Левски",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 28,
                            Description = "Сухата река",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Подуяне",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 30,
                            Description = "Яворов",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 31,
                            Description = "Редута",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 32,
                            Description = "Христо Ботев",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 33,
                            Description = "Слатина",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 34,
                            Description = "Гео Милев",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 35,
                            Description = "Полигона",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 36,
                            Description = "7-ми 11-ти километър",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 37,
                            Description = "Дружба 1",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 38,
                            Description = "Дружба 2",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 39,
                            Description = "Оборище",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 40,
                            Description = "Докторски паметник",
                            Region = "Изток"
                        },
                        new
                        {
                            Id = 41,
                            Description = "Медицинска академия",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 42,
                            Description = "Хиподрума",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 43,
                            Description = "Красно село",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 44,
                            Description = "Бъкстон",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 45,
                            Description = "Павлово",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 46,
                            Description = "м-т Гърдова глава",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 47,
                            Description = "Княжево",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 48,
                            Description = "в.з.Килиите",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 49,
                            Description = "Иван Вазов",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 50,
                            Description = "Стрелбище",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 51,
                            Description = "Белите брези",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 52,
                            Description = "Борово",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 53,
                            Description = "Гоце Делчев",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 54,
                            Description = "Манастирски ливади",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 55,
                            Description = "в.з.Беловодски път",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 56,
                            Description = "Бояна",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 57,
                            Description = "в.з.Бояна",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 58,
                            Description = "в.з.Киноцентъра 3 част",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 59,
                            Description = "в.з.Киноцентъра",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 60,
                            Description = "Драгалевци",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 61,
                            Description = "Кръстова вада",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 62,
                            Description = "Витоша",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 63,
                            Description = "в.з.Симеоново - Драгалевци",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 64,
                            Description = "Симеоново",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 65,
                            Description = "в.з.Малинова долина",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 66,
                            Description = "Лозенец",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 67,
                            Description = "Хладилника",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 68,
                            Description = "Изток",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 69,
                            Description = "Изгрев",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 70,
                            Description = "Дианабад",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 71,
                            Description = "Мусагеница",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 72,
                            Description = "Дървеница",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 73,
                            Description = "Студентски град",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 74,
                            Description = "Малинова долина",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 75,
                            Description = "в.з.Американски колеж",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 76,
                            Description = "Младост 4",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 77,
                            Description = "Младост 3",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 78,
                            Description = "Младост 2",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 79,
                            Description = "Младост 1",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 80,
                            Description = "Младост 1А",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 81,
                            Description = "Експериментален",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 82,
                            Description = "Горубляне",
                            Region = "Юг"
                        },
                        new
                        {
                            Id = 83,
                            Description = "Карпузица",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 84,
                            Description = "Овча купел",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 85,
                            Description = "Славия",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 86,
                            Description = "Лагера",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 87,
                            Description = "Люлин 1",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 88,
                            Description = "Люлин 8",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 89,
                            Description = "Люлин 9",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 90,
                            Description = "Люлин 10",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 91,
                            Description = "Гевгелийски",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 92,
                            Description = "Илинден",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 93,
                            Description = "Зона Б-19",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 94,
                            Description = "Зона Б-5",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 95,
                            Description = "Зона Б-5-3",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 96,
                            Description = "Сердика",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 97,
                            Description = "Горна баня",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 98,
                            Description = "Овча купел 2",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 99,
                            Description = "Овча купел 1",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 100,
                            Description = "Факултета",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 101,
                            Description = "Красна поляна 2",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 102,
                            Description = "Красна поляна 3",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 103,
                            Description = "Разсадника",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 104,
                            Description = "Красна поляна 1",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 105,
                            Description = "Западен парк",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 106,
                            Description = "Люлин 7",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 107,
                            Description = "Люлин 6",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 108,
                            Description = "Люлин 5",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 109,
                            Description = "Люлин 4",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 110,
                            Description = "Люлин 3",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 111,
                            Description = "Люлин 2",
                            Region = "Запад"
                        },
                        new
                        {
                            Id = 112,
                            Description = "Люлин - център",
                            Region = "Запад"
                        });
                });

            modelBuilder.Entity("BuildingMarket.Properties.Domain.Entities.NumberOfRooms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("number_of_rooms_type");

                    b.HasKey("Id");

                    b.ToTable("NumberOfRoomsType", "properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Едностаен"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Двустаен"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Тристаен"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Четиристаен"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Многостаен"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Мезонет"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Гараж"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Склад"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Таванско помещение"
                        });
                });

            modelBuilder.Entity("BuildingMarket.Properties.Domain.Entities.OrderBy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("order_by");

                    b.Property<string>("RelatedPropName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("related_prop_name");

                    b.HasKey("Id");

                    b.ToTable("OrderBy", "properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Цена",
                            RelatedPropName = "Price"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Най-нови",
                            RelatedPropName = "CreatedOnLocalTime"
                        });
                });

            modelBuilder.Entity("BuildingMarket.Properties.Domain.Entities.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BrokerId")
                        .HasColumnType("text")
                        .HasColumnName("broker_id");

                    b.Property<string>("BuildingType")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("building_type");

                    b.Property<DateTime>("CreatedOnUtcTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc))
                        .HasColumnName("created_on_utc_time");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Exposure")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("exposure");

                    b.Property<string>("Finish")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("finish");

                    b.Property<int>("Floor")
                        .HasColumnType("integer")
                        .HasColumnName("floor");

                    b.Property<string>("Furnishment")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("furnishment");

                    b.Property<string>("Garage")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("garage");

                    b.Property<string>("Heating")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("heating");

                    b.Property<string>("Neighbourhood")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("neighbourhood");

                    b.Property<string>("NumberOfRooms")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("number_of_rooms");

                    b.Property<float>("Price")
                        .HasColumnType("real")
                        .HasColumnName("price");

                    b.Property<string>("SellerId")
                        .HasColumnType("text")
                        .HasColumnName("seller_id");

                    b.Property<float>("Space")
                        .HasColumnType("real")
                        .HasColumnName("space");

                    b.Property<int>("TotalFloorsInBuilding")
                        .HasColumnType("integer")
                        .HasColumnName("total_floors_in_building");

                    b.HasKey("Id");

                    b.ToTable("Properties", "properties");
                });

            modelBuilder.Entity("BuildingMarket.Properties.Domain.Entities.PublishedOn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("description");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_days");

                    b.HasKey("Id");

                    b.ToTable("PublishedOn", "properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Днес",
                            NumberOfDays = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Преди 3 дни",
                            NumberOfDays = 3
                        },
                        new
                        {
                            Id = 3,
                            Description = "Преди седмица",
                            NumberOfDays = 7
                        },
                        new
                        {
                            Id = 4,
                            Description = "Преди месец",
                            NumberOfDays = 30
                        },
                        new
                        {
                            Id = 5,
                            Description = "Всички",
                            NumberOfDays = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", "security", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

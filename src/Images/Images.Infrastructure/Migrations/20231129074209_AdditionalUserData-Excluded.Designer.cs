// <auto-generated />
using System;
using BuildingMarket.Images.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BuildingMarket.Images.Infrastructure.Migrations
{
    [DbContext(typeof(ImagesDbContext))]
    [Migration("20231129074209_AdditionalUserData-Excluded")]
    partial class AdditionalUserDataExcluded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BuildingMarket.Auth.Domain.Entities.AdditionalUserData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("first_name");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("image_url");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("character varying")
                        .HasColumnName("phone_number");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("AdditionalData", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("BuildingMarket.Images.Domain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageURL")
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<int>("PropertyId")
                        .HasColumnType("integer")
                        .HasColumnName("property_id");

                    b.HasKey("Id");

                    b.ToTable("Images", "properties", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("BuildingMarket.Images.Domain.Entities.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BrokerId")
                        .HasColumnType("text")
                        .HasColumnName("broker_id");

                    b.Property<string>("BuildingType")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("building_type");

                    b.Property<DateTime>("CreatedOnUtcTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc))
                        .HasColumnName("created_on_utc_time");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Finish")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("finish");

                    b.Property<int>("Floor")
                        .HasColumnType("integer")
                        .HasColumnName("floor");

                    b.Property<string>("Furnishment")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("furnishment");

                    b.Property<string>("Garage")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("garage");

                    b.Property<string>("Heating")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("heating");

                    b.Property<string>("Neighbourhood")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("neighbourhood");

                    b.Property<string>("NumberOfRooms")
                        .HasMaxLength(255)
                        .HasColumnType("character varying")
                        .HasColumnName("number_of_rooms");

                    b.Property<float>("Price")
                        .HasColumnType("real")
                        .HasColumnName("price");

                    b.Property<string>("SellerId")
                        .HasColumnType("text")
                        .HasColumnName("seller_id");

                    b.Property<float>("Space")
                        .HasColumnType("real")
                        .HasColumnName("space");

                    b.Property<int>("TotalFloorsInBuilding")
                        .HasColumnType("integer")
                        .HasColumnName("total_floors_in_building");

                    b.HasKey("Id");

                    b.ToTable("Properties", "properties", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
